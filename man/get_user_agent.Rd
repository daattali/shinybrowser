% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/get_info.R
\name{get_user_agent}
\alias{get_user_agent}
\title{Get user agent string from the browser}
\usage{
get_user_agent()
}
\description{
The value is reactive, therefore it must be accessed inside a reactive context
(such as an \link[shiny:observe]{observe} or \link[shiny:reactive]{reactive}).\cr\cr
\code{{shinybrowser}} must be initialized with a call to \code{\link[=detect]{detect()}} in the app's ui.
}
\section{Accuracy}{

It's important to understand there is no reliable way to detect the
information in \code{{shinybrowser}} with 100\% accuracy.\cr\cr\code{{shinybrowser}} makes
a best effort at identifying the most accurate information, but some
browser/operating system combinations may be difficult to identify. Users
can also use a variety of tools to deliberately spoof this information.\cr\cr
With that in mind, \code{{shinybrowser}} should detect the correct information in
most cases.
}

\examples{
if (interactive()) {
  library(shiny)

  ui <- fluidPage(
    shinybrowser::detect(),
    "Your user agent:",
    textOutput("ua_info")
  )
  server <- function(input, output, session) {
    output$ua_info <- renderText({
      shinybrowser::get_user_agent()
    })
  }
  shinyApp(ui, server)
}
}
\seealso{
\code{\link[=detect]{detect()}}, \code{\link[=get_info]{get_info()}}
}
